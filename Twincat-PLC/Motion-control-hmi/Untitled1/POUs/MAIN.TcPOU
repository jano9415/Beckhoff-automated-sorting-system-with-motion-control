<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="MAIN" Id="{d7bd07a9-632a-4512-a44e-2ca193c0ff70}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR
	AxisControl : AxisControl;
	sizeMeasure : sizeMeasure;
	weightMeasure : WeightMeasure;
	control24V : Control24V;
	
	//Timers
	fbTon1 : TON;
	fbTon2 : TON;
	fbTon3 :TON;
	fbTon4 :TON;
	fbTon5 : TON;
	fbTon6 : TON;
	fbTon7 : TON;
	fbTp1 : TP;
	
	//Falling and rising edges
	startPosFallingEdge : F_TRIG;
	itemLeftTheTableFallingEdge : F_TRIG;
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[AxisControl();
sizeMeasure();
weightMeasure();

//Control 24V power supply
control24V();

//If there is 24V control supply, the servo is ready to operate
IF MeasuringData.ControlSupplyOK THEN
	AxisControl(McPowerEnable := TRUE);
ELSE
	AxisControl(McPowerEnable := FALSE);
END_IF

//Table positions
TablePositions();

//Save new bin position
SaveNewBinPosition();

//Breed calculation
BreedCalculation();

//Manual motion of servo
ServoManualMotion();

//PLC2 communication

//The blue light is on if there is 24V control supply.
IF MeasuringData.ControlSupplyOK THEN
	Outputs.Blue_light := TRUE;
ELSE
	Outputs.Blue_light := FALSE;
END_IF

//Start the system and the conveyor from HMI button.
//The yellow light is on.
IF MeasuringData.AutomaticMode AND MeasuringData.StartConveyor THEN
	fbTon1(IN := TRUE, PT := T#3S);
ELSE
	fbTon1(IN := FALSE);
END_IF

IF fbTon1.Q THEN
	Outputs.Yellow_light := TRUE;
	Outputs.Conveyor_forward := TRUE;
END_IF

//Halt the conveyor
IF MeasuringData.AutomaticMode AND MeasuringData.StopConveyor THEN
	Outputs.Conveyor_forward := FALSE;
END_IF

//Halt the servo motor

//Move gripping cylinder in start position backward.
//If there is no item in the system.
IF Steps.ActualStep = 1 AND Inputs.Start_pos THEN
	fbTon2(IN := TRUE, PT := T#3S);
ELSE
	fbTon2(IN := FALSE);
END_IF

IF fbTon2.Q AND NOT MeasuringData.ItemInTheSystem THEN
	Outputs.Move_grip_cyl_start_bwd := TRUE;
	Steps.ActualStep := 2;
END_IF

//After leaving the start position sensor, the system is in progress so there is an item in the system.
//The green light is on.
//The yellow light is off.
//Move gripping cylinder in start position forward.
startPosFallingEdge(CLK := Inputs.Start_pos);
IF startPosFallingEdge.Q THEN
	MeasuringData.ItemInTheSystem := TRUE;
	MeasuringData.ItemInTheSystemOnHmi := FALSE;
	Outputs.Green_light := TRUE;
	Outputs.Yellow_light := FALSE;
	Outputs.Move_grip_cyl_start_bwd := FALSE;
END_IF

//If the sensor active for two seconds, save the size in the data block.
IF Steps.ActualStep = 2 AND Inputs.Size_measure_pos THEN
	fbTon3(IN := TRUE, PT := T#3S);
ELSE
	fbTon3(IN := FALSE);
END_IF

IF fbTon3.Q THEN
	MeasuringData.SizeInCm := sizeMeasure.sizeInCm;
	Steps.ActualStep := 3;
END_IF

//Metal measure
IF Steps.ActualStep = 3 AND Inputs.Metal_measure_pos AND Inputs.Metal_sensor THEN
	MeasuringData.MetalMaterial := TRUE;
	Steps.ActualStep :=4 ;
END_IF

//Weight measure
IF Steps.ActualStep = 4 AND Inputs.Weight_mes_pos THEN
	fbTon4(IN := TRUE, PT := T#2S);
ELSE
	fbTon4(IN := FALSE);
END_IF

IF fbTon4.Q THEN
	MeasuringData.WeightInKg := weightMeasure.weightInKg;
	Steps.ActualStep := 5;
END_IF

//TCP/IP communication between the PLCs.
//If the end position sensor or sensor at the table are active, getting bin saturation data from PLC2.


//Retract gripping cylinder in end position
//If the sensor at conveyor is active for 1.5 seconds and the reed sensor is active and the certain bin is not full and the table is at home position.
//The state of bin sensors comes from PLC2.
IF Steps.ActualStep = 5 AND Inputs.End_pos_at_conveyor THEN
	fbTon5(IN := TRUE, PT := T#1.5S);
ELSE
	fbTon5(IN := FALSE);
END_IF

IF fbTon5.Q AND Inputs.Grip_cyl_end_ext AND MeasuringData.TableAtHome AND
	(
	(MeasuringData.Bin1Breed AND NOT BinSensorsFromPlc2.Bin1Full) OR
	(MeasuringData.Bin2Breed AND NOT BinSensorsFromPlc2.Bin2Full) OR
	(MeasuringData.Bin3Breed AND NOT BinSensorsFromPlc2.Bin3Full) OR
	(MeasuringData.Bin4Breed AND NOT BinSensorsFromPlc2.Bin4Full)
	)
	THEN
	
	Outputs.Move_grip_cyl_end_bwd := TRUE;
	Steps.ActualStep := 6;
END_IF

//Moving the servo controlled table to the appropriate position.
//If the item is already on the table, extending the cylinder in end position.
IF Steps.ActualStep = 6 AND Inputs.Servo_table_pos THEN
	fbTon6(IN := TRUE, PT := T#2S);
ELSE
	fbTon6(IN := FALSE);
END_IF

IF fbTon6.Q THEN
	Outputs.Move_grip_cyl_end_bwd := FALSE;
END_IF

//Move to bin1
IF fbTon6.Q AND MeasuringData.Bin1Breed AND NOT BinSensorsFromPlc2.Bin1Full THEN
	AxisControl(AbsolutePosition := MeasuringData.Bin1Position);
	AxisControl(MoveToBin1 := TRUE);
	Steps.ActualStep := 7;
ELSE
	AxisControl(AbsolutePosition := 0.0);
	AxisControl(MoveToBin1 := FALSE);
END_IF

//Move to bin2
IF fbTon6.Q AND MeasuringData.Bin2Breed AND NOT BinSensorsFromPlc2.Bin2Full THEN
	AxisControl(AbsolutePosition := MeasuringData.Bin2Position);
	AxisControl(MoveToBin2 := TRUE);
	Steps.ActualStep := 7;
ELSE
	AxisControl(AbsolutePosition := 0.0);
	AxisControl(MoveToBin2 := FALSE);
END_IF

//Move to bin3
IF fbTon6.Q AND MeasuringData.Bin3Breed AND NOT BinSensorsFromPlc2.Bin3Full THEN
	AxisControl(AbsolutePosition := MeasuringData.Bin3Position);
	AxisControl(MoveToBin3 := TRUE);
	Steps.ActualStep := 7;
ELSE
	AxisControl(AbsolutePosition := 0.0);
	AxisControl(MoveToBin3 := FALSE);
END_IF

//Move to bin4
IF fbTon6.Q AND MeasuringData.Bin4Breed AND NOT BinSensorsFromPlc2.Bin4Full THEN
	AxisControl(AbsolutePosition := MeasuringData.Bin4Position);
	AxisControl(MoveToBin4 := TRUE);
	Steps.ActualStep := 7;
ELSE
	AxisControl(AbsolutePosition := 0.0);
	AxisControl(MoveToBin4 := FALSE);
END_IF

(*
Push the item into the proper bin then retract the cylinder.
Move the table back to home position.

There is no item in the system any more.
The next item can move forward from the beginning of the conveyor.
The green light goes off.
The yellow light goes on.
Reset the parameters of the item.
*)
IF Steps.ActualStep = 7 AND Inputs.Servo_table_pos AND (
	(MeasuringData.Bin1Breed AND NOT BinSensorsFromPlc2.Bin1Full) OR
	(MeasuringData.Bin2Breed AND NOT BinSensorsFromPlc2.Bin2Full) OR
	(MeasuringData.Bin3Breed AND NOT BinSensorsFromPlc2.Bin3Full) OR
	(MeasuringData.Bin4Breed AND NOT BinSensorsFromPlc2.Bin4Full)
	)
	THEN
	
	fbTon7(IN := TRUE, PT := T#2S);
ELSE
	fbTon7(IN := FALSE);
END_IF

IF fbTon7.Q THEN
	Outputs.Move_cyl_at_table_fwd := TRUE;
END_IF

IF Inputs.Cyl_at_table_ext THEN
	Outputs.Move_cyl_at_table_fwd := FALSE;
END_IF

itemLeftTheTableFallingEdge(CLK := Inputs.Item_left_the_table);
IF itemLeftTheTableFallingEdge.Q THEN
	fbTp1(IN := TRUE, PT := T#1S);
ELSE
	fbTp1(IN := FALSE);
END_IF

IF fbTp1.Q THEN
	MeasuringData.ItemInTheSystem := FALSE;
	Outputs.Green_light := FALSE;
	Outputs.Yellow_light := TRUE;
	MeasuringData.SizeInCm := 0.0;
	MeasuringData.MetalMaterial := FALSE;
	MeasuringData.WeightInKg := 0.0;
	MeasuringData.ItemInTheSystemOnHmi := TRUE;
	MeasuringData.Bin1Breed := FALSE;
	MeasuringData.Bin1BreedOnHmi := TRUE;
	MeasuringData.Bin2Breed := FALSE;
	MeasuringData.Bin2BreedOnHmi := TRUE;
	MeasuringData.Bin3Breed := FALSE;
	MeasuringData.Bin3BreedOnHmi := TRUE;
	MeasuringData.Bin4Breed := FALSE;
	MeasuringData.Bin4BreedOnHmi := TRUE;
	Steps.ActualStep := 1;
	
	IF NOT Inputs.Servo_table_pos AND Inputs.Cyl_at_table_ret THEN
		AxisControl(ExecuteHomeByAutomatic := TRUE);
	ELSE
		AxisControl(ExecuteHomeByAutomatic := FALSE);
	END_IF
ELSE
	AxisControl(ExecuteHomeByAutomatic := FALSE);
END_IF













]]></ST>
    </Implementation>
    <LineIds Name="MAIN">
      <LineId Id="2" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="20" Count="0" />
      <LineId Id="45" Count="0" />
      <LineId Id="44" Count="0" />
      <LineId Id="96" Count="0" />
      <LineId Id="47" Count="0" />
      <LineId Id="46" Count="0" />
      <LineId Id="48" Count="1" />
      <LineId Id="51" Count="0" />
      <LineId Id="53" Count="0" />
      <LineId Id="50" Count="0" />
      <LineId Id="55" Count="0" />
      <LineId Id="54" Count="0" />
      <LineId Id="56" Count="0" />
      <LineId Id="23" Count="0" />
      <LineId Id="57" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="58" Count="0" />
      <LineId Id="24" Count="0" />
      <LineId Id="26" Count="0" />
      <LineId Id="28" Count="0" />
      <LineId Id="30" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="60" Count="0" />
      <LineId Id="59" Count="0" />
      <LineId Id="108" Count="0" />
      <LineId Id="107" Count="0" />
      <LineId Id="109" Count="1" />
      <LineId Id="131" Count="1" />
      <LineId Id="111" Count="0" />
      <LineId Id="134" Count="1" />
      <LineId Id="133" Count="0" />
      <LineId Id="113" Count="0" />
      <LineId Id="136" Count="0" />
      <LineId Id="138" Count="1" />
      <LineId Id="137" Count="0" />
      <LineId Id="141" Count="0" />
      <LineId Id="140" Count="0" />
      <LineId Id="142" Count="0" />
      <LineId Id="144" Count="0" />
      <LineId Id="143" Count="0" />
      <LineId Id="146" Count="0" />
      <LineId Id="145" Count="0" />
      <LineId Id="148" Count="1" />
      <LineId Id="147" Count="0" />
      <LineId Id="339" Count="0" />
      <LineId Id="338" Count="0" />
      <LineId Id="153" Count="0" />
      <LineId Id="152" Count="0" />
      <LineId Id="154" Count="0" />
      <LineId Id="168" Count="3" />
      <LineId Id="167" Count="0" />
      <LineId Id="172" Count="0" />
      <LineId Id="165" Count="0" />
      <LineId Id="174" Count="0" />
      <LineId Id="421" Count="0" />
      <LineId Id="173" Count="0" />
      <LineId Id="176" Count="3" />
      <LineId Id="175" Count="0" />
      <LineId Id="180" Count="0" />
      <LineId Id="186" Count="1" />
      <LineId Id="283" Count="0" />
      <LineId Id="189" Count="2" />
      <LineId Id="188" Count="0" />
      <LineId Id="194" Count="0" />
      <LineId Id="192" Count="0" />
      <LineId Id="197" Count="3" />
      <LineId Id="114" Count="1" />
      <LineId Id="201" Count="1" />
      <LineId Id="422" Count="0" />
      <LineId Id="116" Count="0" />
      <LineId Id="204" Count="0" />
      <LineId Id="203" Count="0" />
      <LineId Id="205" Count="1" />
      <LineId Id="423" Count="0" />
      <LineId Id="207" Count="0" />
      <LineId Id="209" Count="0" />
      <LineId Id="208" Count="0" />
      <LineId Id="211" Count="7" />
      <LineId Id="424" Count="0" />
      <LineId Id="210" Count="0" />
      <LineId Id="221" Count="0" />
      <LineId Id="220" Count="0" />
      <LineId Id="222" Count="0" />
      <LineId Id="225" Count="1" />
      <LineId Id="117" Count="0" />
      <LineId Id="227" Count="2" />
      <LineId Id="231" Count="0" />
      <LineId Id="234" Count="1" />
      <LineId Id="232" Count="0" />
      <LineId Id="237" Count="0" />
      <LineId Id="236" Count="0" />
      <LineId Id="407" Count="0" />
      <LineId Id="242" Count="3" />
      <LineId Id="409" Count="0" />
      <LineId Id="408" Count="0" />
      <LineId Id="246" Count="0" />
      <LineId Id="238" Count="0" />
      <LineId Id="425" Count="0" />
      <LineId Id="239" Count="0" />
      <LineId Id="248" Count="0" />
      <LineId Id="247" Count="0" />
      <LineId Id="249" Count="0" />
      <LineId Id="251" Count="3" />
      <LineId Id="230" Count="0" />
      <LineId Id="286" Count="0" />
      <LineId Id="285" Count="0" />
      <LineId Id="287" Count="1" />
      <LineId Id="261" Count="0" />
      <LineId Id="256" Count="0" />
      <LineId Id="255" Count="0" />
      <LineId Id="405" Count="0" />
      <LineId Id="257" Count="0" />
      <LineId Id="448" Count="0" />
      <LineId Id="259" Count="0" />
      <LineId Id="406" Count="0" />
      <LineId Id="260" Count="0" />
      <LineId Id="258" Count="0" />
      <LineId Id="263" Count="2" />
      <LineId Id="410" Count="0" />
      <LineId Id="266" Count="0" />
      <LineId Id="449" Count="0" />
      <LineId Id="267" Count="0" />
      <LineId Id="411" Count="0" />
      <LineId Id="268" Count="0" />
      <LineId Id="262" Count="0" />
      <LineId Id="270" Count="2" />
      <LineId Id="412" Count="0" />
      <LineId Id="273" Count="0" />
      <LineId Id="450" Count="0" />
      <LineId Id="274" Count="0" />
      <LineId Id="413" Count="0" />
      <LineId Id="275" Count="0" />
      <LineId Id="269" Count="0" />
      <LineId Id="277" Count="2" />
      <LineId Id="414" Count="0" />
      <LineId Id="280" Count="0" />
      <LineId Id="451" Count="0" />
      <LineId Id="281" Count="0" />
      <LineId Id="415" Count="0" />
      <LineId Id="282" Count="0" />
      <LineId Id="276" Count="0" />
      <LineId Id="307" Count="0" />
      <LineId Id="289" Count="0" />
      <LineId Id="300" Count="6" />
      <LineId Id="292" Count="0" />
      <LineId Id="291" Count="0" />
      <LineId Id="308" Count="0" />
      <LineId Id="418" Count="0" />
      <LineId Id="309" Count="0" />
      <LineId Id="311" Count="1" />
      <LineId Id="420" Count="0" />
      <LineId Id="419" Count="0" />
      <LineId Id="313" Count="0" />
      <LineId Id="315" Count="2" />
      <LineId Id="310" Count="0" />
      <LineId Id="319" Count="0" />
      <LineId Id="318" Count="0" />
      <LineId Id="320" Count="1" />
      <LineId Id="323" Count="0" />
      <LineId Id="322" Count="0" />
      <LineId Id="324" Count="1" />
      <LineId Id="328" Count="0" />
      <LineId Id="327" Count="0" />
      <LineId Id="329" Count="0" />
      <LineId Id="376" Count="2" />
      <LineId Id="331" Count="0" />
      <LineId Id="381" Count="0" />
      <LineId Id="379" Count="0" />
      <LineId Id="384" Count="5" />
      <LineId Id="416" Count="0" />
      <LineId Id="390" Count="6" />
      <LineId Id="382" Count="0" />
      <LineId Id="452" Count="0" />
      <LineId Id="397" Count="0" />
      <LineId Id="399" Count="3" />
      <LineId Id="398" Count="0" />
      <LineId Id="403" Count="1" />
      <LineId Id="383" Count="0" />
      <LineId Id="118" Count="12" />
      <LineId Id="112" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>